/**
 * Unit tests for the `Strings` library.
 *
 * @author Jackson Ray Hamilton
 */
class StringsTests {

  function void equals_SameString_True() {
    do UnitTest.assertTrue("same strings", Strings.equals("abc", "abc"));
    do UnitTest.assertTrue("same strings", Strings.equals("defghi", "defghi"));
    return;
  }

  function void equals_DifferentStrings_False() {
    do UnitTest.assertFalse("different strings", Strings.equals("abc", "def"));
    do UnitTest.assertFalse("different strings", Strings.equals("defghi", "abcdef"));
    return;
  }

  function void coerceInt_DifferingSizes_CorrectStringSize() {
    do UnitTest.assertStringEquals("coerce int to string", "0", Strings.coerceInt(0));
    do UnitTest.assertStringEquals("coerce int to string", "1", Strings.coerceInt(1));
    do UnitTest.assertStringEquals("coerce int to string", "10", Strings.coerceInt(10));
    do UnitTest.assertStringEquals("coerce int to string", "100", Strings.coerceInt(100));
    do UnitTest.assertStringEquals("coerce int to string", "-1", Strings.coerceInt(-1));
    do UnitTest.assertStringEquals("coerce int to string", "-10", Strings.coerceInt(-10));
    do UnitTest.assertStringEquals("coerce int to string", "-100", Strings.coerceInt(-100));
    return;
  }

  function void coerceChar_DifferentChars_CorrectRepresentation() {
    do UnitTest.assertStringEquals("coerce char to string", "!", Strings.coerceChar(33));
    do UnitTest.assertStringEquals("coerce char to string",
                                   Strings.coerceChar(String.doubleQuote()),
                                   Strings.coerceChar(34));
    do UnitTest.assertStringEquals("coerce char to string", "A", Strings.coerceChar(65));
    return;
  }

  function void concat_DifferingLengths_CorrectlyConcatenated() {
    do UnitTest.assertStringEquals("concat strings", "seashells", Strings.concat("sea", "shells"));
    do UnitTest.assertStringEquals("concat to one empty string", "b", Strings.concat("", "b"));
    do UnitTest.assertStringEquals("concat to one empty string", "a", Strings.concat("a", ""));
    do UnitTest.assertStringEquals("concat empty strings", "", Strings.concat("", ""));
    return;
  }

  function void join_VariousLengths_CorrectlyJoined() {
    var Array arr;

    let arr = Array.new(5);
    let arr[0] = "uno";
    let arr[1] = "dos";
    let arr[2] = "tres";
    let arr[3] = "cuatro";
    let arr[4] = "cinco";

    do UnitTest.assertStringEquals("join strings", "uno, dos, tres, cuatro, cinco", Strings.join(arr, 5, ", "));
    do UnitTest.assertStringEquals("join strings", "unodostrescuatrocinco", Strings.join(arr, 5, ""));

    do arr.dispose();

    let arr = Array.new(1);
    let arr[0] = "I am the one who knocks.";

    do UnitTest.assertStringEquals("join single string", "I am the one who knocks.", Strings.join(arr, 1, "asdf"));

    do arr.dispose();

    return;
  }

  function void substring_DifferingRanges_CorrectSubstring() {
    var String testString;
    var int testStringLength;

    let testString = "abcdefg";
    let testStringLength = testString.length();

    do UnitTest.assertStringEquals("substring", "a", Strings.substring(testString, 0, 1));
    do UnitTest.assertStringEquals("substring", "", Strings.substring(testString, 0, 0));
    do UnitTest.assertStringEquals("substring", "ab", Strings.substring(testString, 0, 2));
    do UnitTest.assertStringEquals("substring", "abcdefg", Strings.substring(testString, 0, testStringLength));
    do UnitTest.assertStringEquals("substring", "efg", Strings.substring(testString, 4, testStringLength));

    return;
  }

  function void indexOf_DifferingSubstringSizes_CorrectIndex() {
    var String testString;

    let testString = "abcdefg";

    do UnitTest.assertIntegerEquals("indexOf", 0, Strings.indexOf(testString, "a", 0));
    do UnitTest.assertIntegerEquals("indexOf", 1, Strings.indexOf(testString, "b", 0));
    do UnitTest.assertIntegerEquals("indexOf", 0, Strings.indexOf(testString, "ab", 0));
    do UnitTest.assertIntegerEquals("indexOf", 1, Strings.indexOf(testString, "bc", 0));
    do UnitTest.assertIntegerEquals("indexOf", -1, Strings.indexOf(testString, "hijkl", 0));
    do UnitTest.assertIntegerEquals("indexOf", -1, Strings.indexOf(testString, "a", 1));

    return;
  }

  function void sprintf_NoTags_SameString() {
    var Array arr;

    let arr = Array.new(1);
    let arr[0] = "";

    do UnitTest.assertStringEquals("no tags; interpolate nothing",
                                   "yo yo yo",
                                   Strings.sprintf("yo yo yo", arr));

    do arr.dispose();

    return;
  }

  function void sprintf_NumerousTypes_CorrectInterpolation() {
    var Array arr;

    let arr = Array.new(2);
    let arr[0] = "quick";
    let arr[1] = 10;

    do UnitTest.assertStringEquals("interpolate values",
                                   "the quick fox jumps over 10 dogs",
                                   Strings.sprintf("the %s fox jumps over %i dogs", arr));

    do arr.dispose();

    let arr = Array.new(1);
    let arr[0] = -517;

    do UnitTest.assertStringEquals("interpolate values",
                                   "I am -517 years old!! What",
                                   Strings.sprintf("I am %i years old!! What", arr));

    do arr.dispose();

    let arr = Array.new(5);
    let arr[0] = Strings.parseChar("!");
    let arr[1] = "Bob";
    let arr[2] = 1;
    let arr[3] = Strings.parseChar("?");
    let arr[4] = "";

    do UnitTest.assertStringEquals("interpolate values",
                                   "OMG! Bob is 1 weird guy, isn't he?",
                                   Strings.sprintf("OMG%c %s is %d weird guy, isn't he%c%s", arr));

    do arr.dispose();

    return;
  }

  function void runTests() {
    do StringsTests.equals_SameString_True();
    do StringsTests.equals_DifferentStrings_False();
    do StringsTests.coerceInt_DifferingSizes_CorrectStringSize();
    do StringsTests.coerceChar_DifferentChars_CorrectRepresentation();
    do StringsTests.concat_DifferingLengths_CorrectlyConcatenated();
    do StringsTests.join_VariousLengths_CorrectlyJoined();
    do StringsTests.substring_DifferingRanges_CorrectSubstring();
    do StringsTests.indexOf_DifferingSubstringSizes_CorrectIndex();
    do StringsTests.sprintf_NoTags_SameString();
    do StringsTests.sprintf_NumerousTypes_CorrectInterpolation();
    return;
  }

}
